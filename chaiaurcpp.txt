./(file name)  this is what we have to write in the terminal for running a code if it is not running properly 

(getline) is an in-built function defined in the <string. h> header file that allows accepting and reading single and multiple line strings from the input stream

cin >> response >> endl;    is just similar as getline(cin,response)


names of functions can be same! then how we will diffrentaite them ? on the basis of there declared parameters


pass by value hota h apne end pr changes krna matlab koi online file download ki or usmai changes kr rha hu lekin jo original file hogi owner k pass uska data toh as it is hi rhega na 
and on the other hand 
pass by refrence iska ulta hota h sidha kisi file ka acccess mila or usmai changes kr rhe maltab ek tara se main file mai hi just like git github mai krte h and isko use krne k liye basically sirf ek (&) wale sign ka use hota h 

lemda function are mainly used in frameworks 
and let us discuss how to declare it:-
[](int n){
    this is how it declare 
}


OOPS in C++:-

how to declare?
phele toh ye ki classes ki aandar hi objects aate h 
OOPS kisi bhi lang k ho java C++ javascript almost sb same h 

class{
    public:
        //code

    private:         //declare private state variable
        //code
    
    protected:      //declare protected function for derived classes only 
        //code
};

these above thing about OOPS are known as to be access modifier and you can also go through the documentation of microsoft 


pointers:-
use to locate the memory address
* known as astrick
& known as impercent

to declare the data type use *
to declare the memory use &

example:-
int* prepareChai(int cups){
    int* orders = new int(cups);     // new is the keywords

    for(int i = 0; i < cups; i++){
        orders[i] = (i + 1) * 10;
    }
    return orders;
}

int main(){
    int cups = 5;
    int* orderChai = prepareChai(cups);

    for(int i = 0; i < cups; i++){
        cout << "cups: " << i + 1 << "has" << orderChai[i] << "ml" << endl;
    }
    delete[] orderChai;
    return 0;
}


swaping number is easy by an easy inbuilt swap function;


Pointers:-
Pointers reduce the code and improve performance. They are used to retrieve strings, trees, arrays, structures, and functions.
Pointers allow us to return multiple values from functions.
In addition to this, pointers allow us to access a memory location in the computer’s memory.
If you are not able use pointers it is of no use just know about it what are pointers how they perform there tasks and all such theory points

just revice the types of pointers and there usage from chatGPT 



**Pseudo Code:- 
Pseudo code is a simplified, human-readable representation of an algorithm, written in a structured way without specific syntax. It helps in planning logic before actual coding.
(1) Focuses on logic, not syntax.
(2) Helps in designing algorithms before writing real code


**Brute Force Code:-
(1) A brute force approach systematically explores all possible solutions to a problem without optimization. It is simple but inefficient for large inputs.
(2) Brute force is easy to implement but inefficient for large problems.



**To capatilise the first letter:
if(!s.empty()){
    s[0] = toupper(s[0])
}
Means using this you can capatilise the first letter of your word
(idea from solving gfg upper case conversion question)



**Unordered_map is required when:-
(1) to store key value pairs
(2) avg O(1) time complexity for insert, dlt, access values
(3) Fast Lookup – O(1) average time complexity for searching elements.
✅ No Sorting Required – Elements are not stored in any specific order.
✅ Key-Value Pair Storage – Useful when you need to store unique keys with associated values.
✅ Efficient for Large Data – Performs better than map when order is not needed.

When you use Unordered_map so you have to iterate in different way:-

//code
    marks["Alice"] = 90;
    marks["Bob"] = 85;
    marks["Charlie"] = 78;

 for (auto it : marks) {
        cout << it.first << " -> " << it.second << endl;
    }

//output
    Charlie -> 78
    Alice -> 90
    Bob -> 85



**How to get nearest round off number:-
(using in built round() function)
double d = code;
int r = (int)round(d);
and then simply return r;


**Conversion of "char" into "int":-
|| int digit = s[i] - '0';   this will help to convert char into int;



**What is the use of floor in cpp?
It is used to round down a floating-point number to the nearest integer value. It is part of the cmath library in C++.